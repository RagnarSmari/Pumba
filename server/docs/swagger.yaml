definitions:
  dtos.JobDto:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dtos.NewSessionRequest:
    properties:
      id_token:
        type: string
    type: object
  dtos.PostJobRequest:
    properties:
      name:
        type: string
    type: object
  dtos.TimestampDto:
    properties:
      email:
        type: string
      id:
        type: integer
      totalHours:
        type: integer
    type: object
  dtos.TimestampRequest:
    properties:
      jobId:
        type: integer
      totalHours:
        type: integer
    type: object
info:
  contact: {}
  title: Pumba API doc
  version: "1.0"
paths:
  /auth/logout:
    post:
      description: |-
        Called after a user has logged out using firebase
        Overwrites the existing cookie
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Logs out a user
      tags:
      - Auth
  /auth/newSession:
    post:
      description: |-
        Called after a user has logged in using firebase
        Creates a secure https only cookie for user to use
      parameters:
      - description: Session
        in: body
        name: Job
        required: true
        schema:
          $ref: '#/definitions/dtos.NewSessionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: Creates a new session cookie for that user
      tags:
      - Auth
  /auth/sessioncheck:
    get:
      description: Checks if session already exists, if user is already logged in
      responses:
        "204":
          description: No Content
      summary: Session check
      tags:
      - Auth
  /job:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.JobDto'
            type: array
      summary: Gets all jobs
      tags:
      - Jobs
    post:
      consumes:
      - application/json
      parameters:
      - description: Job
        in: body
        name: Job
        required: true
        schema:
          $ref: '#/definitions/dtos.PostJobRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dtos.JobDto'
      summary: Creates a new job
      tags:
      - Jobs
  /job/{job_id}:
    get:
      parameters:
      - description: Job ID
        in: path
        name: job_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.JobDto'
      summary: Gets a job by id
      tags:
      - Jobs
  /job/{job_id}/timestamps:
    get:
      parameters:
      - description: Job ID
        in: path
        name: job_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.TimestampDto'
            type: array
      summary: Get all timestamps related to a job
      tags:
      - Jobs
  /timestamp:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.TimestampDto'
            type: array
      summary: Gets all timestamps
      tags:
      - Timestamps
    post:
      parameters:
      - description: Timestamp
        in: body
        name: Timestamp
        required: true
        schema:
          $ref: '#/definitions/dtos.TimestampRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.TimestampDto'
      summary: Creates a new timestamp
      tags:
      - Timestamps
swagger: "2.0"
